# -*- mode: makefile; -*-
# Specific part for CV compilations

CV_CONF      = _cv_config.sty

# Specific bibliographic processing
PERLMODULES=$(shell grep "^use " $(SPLIT_BIB_SCRIPT) | cut -d ' ' -f 2 | grep -v "strict" | grep -v "warnings" | sed -e "s/;//" | sort | uniq)
MANDATORY_BINARIES = latex pdflatex bibtex perl seq

############################### CV versions ################################
#all: full
#BEFORE_TARGETS += full

TARGETS = full

## Prepare the configuration for a given type of CV
conf_full:
	@echo "=> configure CV to generate 'FULL' version"
	@echo "\def\cvtype{\cvfull}" > $(CV_CONF)

conf_short:
	@echo "=> configure CV to generate 'SHORT' version (3 pages)"
	@echo "\def\cvtype{\cvshort}" > $(CV_CONF)

conf_small:
	@echo "=> configure CV to generate 'SMALL' version (2 pages)"
	@echo "\def\cvtype{\cvsmall}" > $(CV_CONF)

conf_tiny:
	@echo "=> configure CV to generate 'TINY' version"
	@echo "\def\cvtype{\cvtiny}" > $(CV_CONF)

full:  conf_full  pdf
short: conf_short pdf
small: conf_small pdf
tiny:  conf_tiny  pdf

check:
	@echo " => check mandatory binaries"
	@for cmd in $(MANDATORY_BINARIES); do \
		echo -n "     check $$cmd... "; \
		if [ -z "`which $$cmd`" ]; then \
			echo " FAILED!"; \
			echo "*** /!\ ERROR ($$cmd not present within your PATH)***"; \
			echo "*** /!\ Install the missing package and re-run 'make check' to check your config"; \
			exit 1; \
		else \
			echo "OK"; \
		fi \
	done
	@echo " => Perl modules used in $(SPLIT_BIB_SCRIPT):"
	@for p in $(PERLMODULES); do \
	 	echo -n "     $$p..."; \
		perl -M$$p -e 1; \
		if [ $$? == 0 ]; then \
			echo "OK"; \
		else \
			echo "*** /!\ ERROR ($$p not installed)***"; \
			echo "*** /!\ Install the missing module via cpan typically ('sudo cpan' followed by 'install $$p')."; \
			echo "*** /!\ Once installed, re-run 'make check' to check your config"; \
			exit 1; \
		fi; \
	done
#		if [ $$? -eq 0 ]; then echo "OK"; else echo "FAILED!" fi; \
	done

generate:
	for f in $(TARGET_PDF); do   \
		$(MAKE) clean; \
		$(MAKE); \
		mv $$f $(RELEASE_DIR)/; \
		for type in tiny small short; do \
			$(MAKE) clean; \
			$(MAKE) $$type; \
			mv $$f $(RELEASE_DIR)/`basename $$f .pdf`_$$type.pdf;  \
		done; \
	done
